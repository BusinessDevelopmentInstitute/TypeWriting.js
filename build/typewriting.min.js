/*!
 * TypeWriting.js
 *
 * Copyright Â© 2015 Eddie Wen | MIT license
 * https://github.com/EddieWen-Taiwan/TypeWriting.js
 */
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.TypeWriting=n()}(this,function(){"use strict";var t=0,n=!1,e={targetElement:null,inputString:"",typing_interval:150,blink_interval:"0.7s",cursor_color:"black",tw_callback:function(){},task:"unready"},i=function(){if(t<e.inputString.length){var o=r();"<"==o.slice(-1)?n=!0:">"==o.slice(-1)&&(n=!1),e.targetElement.innerHTML=o,n?i():setTimeout(function(){i()},e.typing_interval)}else e.task="ready",t=0,e.tw_callback.call()},r=function(){return e.inputString.slice(0,++t)},o=function(){e.tw_callback=function(){}},a=function(t,n){var e;for(e in n)n.hasOwnProperty(e)&&(t[e]=n[e]);return t},l=function(t,n){if(t&&"object"==typeof t&&(e=a(e,t)),!t.inputString)throw new Error("Missing argument: inputString");if("string"!=typeof t.inputString)throw new Error(t.inputString+" is not a string");n?"function"==typeof n?e.tw_callback=n:(console.error(n+" is not a function"),o()):o();var r=e.targetElement.offsetHeight,l=parseInt(r/3);0==r&&(e.targetElement.innerHTML="I",r=e.targetElement.offsetHeight,l=e.targetElement.offsetWidth);var c="@-webkit-keyframes blink{0%,100%{opacity:1}50%{opacity:0}}@-moz-keyframes blink{0%,100%{opacity:1}50%{opacity:0}}@keyframes blink{0%,100%{opacity:1}50%{opacity:0}}.typingCursor::after{content:'';width:"+l+"px;height:"+r+"px;margin-left:5px;display:inline-block;vertical-align:bottom;background-color:"+e.cursor_color+";-webkit-animation:blink "+e.blink_interval+" infinite;-moz-animation:blink "+e.blink_interval+" infinite;animation:blink "+e.blink_interval+" infinite}",s=document.createElement("style");s.type="text/css",s.styleSheet?s.styleSheet.cssText=c:s.appendChild(document.createTextNode(c)),document.head.appendChild(s),e.targetElement.className+=" typingCursor",e.task="typing",i()};return l.prototype={rewrite:function(t,n){if("typing"==e.task)console.warn("Last task is not finished yet."),setTimeout(function(){this.rewrite(t,n)}.bind(this),e.typing_interval);else{if(!t)throw new Error("Missing argument: inputString");if("string"!=typeof t)throw new Error(t+" is not a string");e.inputString=t,n?"function"==typeof n?e.tw_callback=n:(console.error(n+" is not a function"),o()):o(),e.task="typing",i()}}},l});
